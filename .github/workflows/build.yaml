name: Build and Push Image for Multi-Arch CI- Additional support for s390x & Power

on:
  workflow_dispatch:
  push:
    branches: [integration]
    tags:
      - 'latest'
    paths-ignore:
      - '.tekton/**'
      - '**.md'
      - 'docs/**'
      - 'fvt/**'
      - 'proto/**'

env:
  IMAGE_NAME: "nishan_acharya123/odh-model-controller"
  DEV_IMAGE_NAME: "nishan_acharya123/odh-model-controller-develop"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_ACCESS_TOKEN }}

#      - name: Remove Docker Hub Auth
#        run: |
#          jq 'del(.auths["https://index.docker.io/v1/"])' ~/.docker/config.json > ~/.docker/config.json.tmp && mv ~/.docker/config.json.tmp ~/.docker/config.json

      - name: Verify Quay Login
        run: |
          echo "Verifying Quay login status..."
          cat ~/.docker/config.json      
      
      - name: Export docker build args
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "main" ] && VERSION=latest
          git_commit_sha="$(git rev-parse HEAD)"
          DOCKER_TAG="$(git rev-parse --abbrev-ref HEAD)-$(date -u +"%Y%m%dT%H%M%S%Z")"
          DEV_DEPS="./scripts/build_devimage.sh Dockerfile.develop go.mod go.sum .pre-commit-config.yaml"
          DEV_IMG_TAG=$(cat $(ls ${DEV_DEPS}) | sha1sum | head -c 16)
          DEV_IMAGE="quay.io/${{ env.DEV_IMAGE_NAME }}:$DEV_IMG_TAG"
          DEV_IMAGE_EXISTS=false
          if docker manifest inspect $DEV_IMAGE >/dev/null 2>&1; then
            DEV_IMAGE_EXISTS=true
          else
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              DEV_IMAGE="localhost:5000/${{ env.DEV_IMAGE_NAME }}:$DEV_IMG_TAG"
            fi
          fi
          echo "IMAGE_TAG=$VERSION"                 >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$git_commit_sha"     >> $GITHUB_ENV
          echo "IMAGE_VERSION=$DOCKER_TAG"          >> $GITHUB_ENV
          echo "DEV_IMAGE=$DEV_IMAGE"               >> $GITHUB_ENV
          echo "DEV_IMAGE_EXISTS=$DEV_IMAGE_EXISTS" >> $GITHUB_ENV

      - name: Build and push developer image
        uses: docker/build-push-action@v5
        if: env.DEV_IMAGE_EXISTS == 'false'
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile.develop
          push: true
          tags: ${{ env.DEV_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set dev image for lint and test
        run: |
          docker run --rm ${{ env.DEV_IMAGE }} go version
          echo -n "${{ env.DEV_IMAGE }}" > .develop_image_name

      - name: Run lint
        run: ./scripts/develop.sh make fmt

      - name: Run unit test
        run: ./scripts/develop.sh make test
      
      - name: Generate Dockerfile labels
        run: |
          echo "${{ secrets.QUAY_ACCESS_TOKEN }}" | docker login quay.io -u "${{ secrets.QUAY_USER }}" --password-stdin
          chmod +x ./scripts/generate_labels.sh
          ./scripts/generate_labels.sh

      - name: Build and push controller image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          context: .
          file: Dockerfile
          pull: true
          push: true
          tags: quay.io/nishan_acharya123/odh-model-controller:latest
          build-args: |
            DEV_IMAGE=quay.io/nishan_acharya123/odh-model-controller-develop:latest
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
            COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          debug: true

      - name: Pull and Inspect Image
        run: |
          echo "${{ secrets.QUAY_ACCESS_TOKEN }}" | docker login quay.io -u "${{ secrets.QUAY_USER }}" --password-stdin
          docker pull quay.io/${{ env.IMAGE_NAME }}:latest
          docker manifest inspect quay.io/${{ env.IMAGE_NAME }}:latest | jq '.manifests[] | select(.platform.architecture == "amd64" or .platform.architecture == "arm64" or .platform.architecture == "s390x" or .platform.architecture == "ppc64le")'

