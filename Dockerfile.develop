# Use the UBI 8 Go toolset base image
ARG GOLANG_VERSION=1.21
FROM registry.access.redhat.com/ubi8/go-toolset:$GOLANG_VERSION

# Define build-time arguments
ARG TARGETOS
ARG TARGETARCH

ARG OPENSHIFT_VERSION=4.12
ARG KUSTOMIZE_VERSION=4.5.2
ARG KUBEBUILDER_VERSION=v3.11.0
ARG CONTROLLER_GEN_VERSION=v0.11.4

# Set environment variables
ENV PATH=/usr/local/go/bin:$PATH:/usr/local/kubebuilder/bin
ENV HOME=/root

USER root
WORKDIR /workspace

# Install required build and development tools
RUN --mount=type=cache,target=/root/.cache/dnf:rw \
    dnf install --setopt=cachedir=/root/.cache/dnf -y --nodocs \
       nodejs \
       jq \
       python38 \
    && ln -sf /usr/bin/python3 /usr/bin/python \
    && ln -sf /usr/bin/pip3 /usr/bin/pip

# Install pre-commit
ENV PIP_CACHE_DIR=/root/.cache/pip
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install pre-commit

# Install kubebuilder
RUN curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_${TARGETOS:-linux}_${TARGETARCH:-amd64}.tar.gz | tar -xz -C /tmp/ \
    && mv /tmp/kubebuilder_*_${TARGETOS:-linux}_${TARGETARCH:-amd64} /usr/local/kubebuilder \
    && curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/${KUBEBUILDER_VERSION}/kubebuilder_${TARGETOS:-linux}_${TARGETARCH:-amd64} -o /usr/local/kubebuilder/bin/kubebuilder

# Install OpenShift CLI and kubectl
RUN curl -sSLf --output /tmp/oc_client.tar.gz https://mirror.openshift.com/pub/openshift-v4/${TARGETARCH:-amd64}/clients/ocp/latest-${OPENSHIFT_VERSION}/openshift-client-${TARGETOS:-linux}.tar.gz \
    && tar -xvf /tmp/oc_client.tar.gz -C /tmp \
    && mv /tmp/oc /usr/local/bin \
    && mv /tmp/kubectl /usr/local/bin \
    && chmod a+x /usr/local/bin/oc /usr/local/bin/kubectl \
    && rm -f /tmp/oc_client.tar.gz

# Install kustomize
RUN curl -sSLf --output /tmp/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_${TARGETOS:-linux}_${TARGETARCH:-amd64}.tar.gz \
    && tar -xvf /tmp/kustomize.tar.gz -C /tmp \
    && mv /tmp/kustomize /usr/local/bin \
    && chmod a+x /usr/local/bin/kustomize \
    && rm -v /tmp/kustomize.tar.gz

# Install yq
RUN curl -L https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64.tar.gz | tar xz -C /tmp \
    && mv /tmp/yq_linux_amd64 /usr/local/bin/yq

# Copy Go Modules manifests
COPY .pre-commit-config.yaml go.mod go.sum ./

# Initialize pre-commit and cache dependencies
RUN git init \
    && pre-commit install-hooks \
    && rm -rf .git \
    && go mod tidy \
    && go mod download

# Set up Go environment
ENV PATH $HOME/go/bin:$PATH

# Check the Go Version
RUN go version

# Install controller-gen
RUN go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest \
    && controller-gen --version

# Install Ginkgo test framework
RUN go install github.com/onsi/ginkgo/v2/ginkgo \
    && ginkgo version

# Install setup-envtest
RUN go install sigs.k8s.io/controller-runtime/tools/setup-envtest@v0.0.0-20240320141353-395cfc7486e6 \
    && setup-envtest use 1.26

# Configure git for GitHub Actions
RUN git config --system --add safe.directory /workspace

# Set the default command
CMD ["/bin/bash"]

